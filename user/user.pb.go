// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

//包名，通过protoc生成时go文件时

package user

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//登录请求
type UserLoginReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginReq) Reset()         { *m = UserLoginReq{} }
func (m *UserLoginReq) String() string { return proto.CompactTextString(m) }
func (*UserLoginReq) ProtoMessage()    {}
func (*UserLoginReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{0}
}

func (m *UserLoginReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginReq.Unmarshal(m, b)
}
func (m *UserLoginReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginReq.Marshal(b, m, deterministic)
}
func (m *UserLoginReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginReq.Merge(m, src)
}
func (m *UserLoginReq) XXX_Size() int {
	return xxx_messageInfo_UserLoginReq.Size(m)
}
func (m *UserLoginReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginReq proto.InternalMessageInfo

func (m *UserLoginReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserLoginReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

//登录返回
type UserLoginResp struct {
	TalkId               uint64   `protobuf:"varint,1,opt,name=talk_id,json=talkId,proto3" json:"talk_id,omitempty"`
	TalkToken            string   `protobuf:"bytes,2,opt,name=talk_token,json=talkToken,proto3" json:"talk_token,omitempty"`
	Nickname             string   `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserLoginResp) Reset()         { *m = UserLoginResp{} }
func (m *UserLoginResp) String() string { return proto.CompactTextString(m) }
func (*UserLoginResp) ProtoMessage()    {}
func (*UserLoginResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_116e343673f7ffaf, []int{1}
}

func (m *UserLoginResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserLoginResp.Unmarshal(m, b)
}
func (m *UserLoginResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserLoginResp.Marshal(b, m, deterministic)
}
func (m *UserLoginResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserLoginResp.Merge(m, src)
}
func (m *UserLoginResp) XXX_Size() int {
	return xxx_messageInfo_UserLoginResp.Size(m)
}
func (m *UserLoginResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserLoginResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserLoginResp proto.InternalMessageInfo

func (m *UserLoginResp) GetTalkId() uint64 {
	if m != nil {
		return m.TalkId
	}
	return 0
}

func (m *UserLoginResp) GetTalkToken() string {
	if m != nil {
		return m.TalkToken
	}
	return ""
}

func (m *UserLoginResp) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func init() {
	proto.RegisterType((*UserLoginReq)(nil), "user.UserLoginReq")
	proto.RegisterType((*UserLoginResp)(nil), "user.UserLoginResp")
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_116e343673f7ffaf) }

var fileDescriptor_116e343673f7ffaf = []byte{
	// 155 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x2d, 0x4e, 0x2d,
	0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xdc, 0xb8, 0x78, 0x42, 0x8b,
	0x53, 0x8b, 0x7c, 0xf2, 0xd3, 0x33, 0xf3, 0x82, 0x52, 0x0b, 0x85, 0xa4, 0xb8, 0x38, 0x40, 0xe2,
	0x79, 0x89, 0xb9, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x70, 0x3e, 0x48, 0xae, 0x20,
	0xb1, 0xb8, 0xb8, 0x3c, 0xbf, 0x28, 0x45, 0x82, 0x09, 0x22, 0x07, 0xe3, 0x2b, 0x25, 0x73, 0xf1,
	0x22, 0x99, 0x53, 0x5c, 0x20, 0x24, 0xce, 0xc5, 0x5e, 0x92, 0x98, 0x93, 0x1d, 0x9f, 0x99, 0x02,
	0x36, 0x87, 0x25, 0x88, 0x0d, 0xc4, 0xf5, 0x4c, 0x11, 0x92, 0xe5, 0xe2, 0x02, 0x4b, 0x94, 0xe4,
	0x67, 0xa7, 0xe6, 0x41, 0xcd, 0xe1, 0x04, 0x89, 0x84, 0x80, 0x04, 0x40, 0x96, 0xe4, 0x65, 0x26,
	0x67, 0x83, 0x1d, 0xc0, 0x0c, 0xb1, 0x04, 0xc6, 0x4f, 0x62, 0x03, 0xbb, 0xdc, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0x9c, 0x08, 0x59, 0x37, 0xc7, 0x00, 0x00, 0x00,
}
